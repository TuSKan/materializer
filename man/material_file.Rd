% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/materialize-file.R
\name{material_file}
\alias{material_file}
\alias{update_material_file}
\title{Create a materialize file input}
\usage{
material_file(inputId, label, server = FALSE, multiple = FALSE,
  icon = "file_upload", class = NULL, depth = NULL, color = NULL)

update_material_file(input, inputId, rootDirectory,
  session = shiny::getDefaultReactiveDomain())
}
\arguments{
\item{inputId}{String. The input identifier used to access the value.}

\item{label}{String. The file input button text.}

\item{server}{Logical. Should the file be selected on server-side rather than client-side?}

\item{multiple}{logical. Should select multiples files?}

\item{icon}{String. The name of the icon. Leave empty for no icon. Visit \url{http://materializecss.com/icons.html} for a list of available icons.}

\item{class}{String. Aditional class for button. Value should be 'btn-round', 'btn-large' or 'btn-small'.}

\item{depth}{Integer. The amount of depth of the button. The value should be between 0 and 5. Leave empty for the default depth.}

\item{color}{String. The color name of the fileinput. Leave empty for the 'teal lighten-1' color. Visit \url{http://materializecss.com/color.html} for a list of available colors.}

\item{input}{Shiny server input.}

\item{rootDirectory}{String. The begin directory to browser. Read-only access needed.}

\item{session}{Shiny default reactive domain.}
}
\description{
Build a materialize file input.
}
\examples{
if (interactive()) {
library(shiny)
library(materializer)
# Wrap materialize apps in material_page
ui <- material_body(
  title = "Basic Page",
  include_fonts = TRUE,
  tags$h1("Page Content"),
  material_file(inputId = "example_file_input", label = "ok")
)

server <- function(input, output, session) {

  observeEvent(input$example_file_input, {
    inFile <- input$example_file_input
    if (is.null(inFile)) {
      return(NULL)
    }
    x <- read.csv(inFile$datapath)
    message(head(x))
  })
}
shinyApp(ui = ui, server = server)
}
}

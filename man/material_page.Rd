% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/materialize-page.R
\name{material_page}
\alias{material_page}
\alias{update_material_page}
\title{Create a container to organize UI content}
\usage{
material_page(inputId, ..., bgcolor = "transparent", fontcolor = NULL)

update_material_page(inputId, active,
  session = shiny::getDefaultReactiveDomain())
}
\arguments{
\item{inputId}{String. The input identifier used to access the value.}

\item{...}{tagList. UI content list}

\item{bgcolor}{String. The color name for Sidenav backgroud. Leave empty for 'transparent' color. Visit \url{http://materializecss.com/color.html} for a list of available colors.}

\item{fontcolor}{String. The color name for links and icons in Sidenav Leave empty for the 'teal lighten-1' color. Visit \url{http://materializecss.com/color.html} for a list of available colors.}

\item{active}{Boolean. Show Page}

\item{session}{Shiny default reactive domain.}
}
\description{
UI content can be insert in a container to organize items on a page.
}
\examples{
require(materializer)
material_page(inputId = "expage", shiny::h1("Page Content"))
}
